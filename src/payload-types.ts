/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
  collections: {
    categories: Category;
    comments: Comment;
    currencies: Currency;
    medias: Media;
    notifications: Notification;
    'payment-methods': PaymentMethod;
    plans: Plan;
    'product-prices': ProductPrice;
    products: Product;
    subscriptions: Subscription;
    orders: Order;
    users: User;
  };
  globals: {
    'pago-movil': PagoMovil;
    zelle: Zelle;
  };
}
export interface Category {
  id: string;
  name: string;
  description: string;
  image: string | Media;
  createdBy?: string | User;
  lastModifiedBy?: string | User;
  updatedAt: string;
  createdAt: string;
}
export interface Media {
  id: string;
  altText: string;
  createdBy?: string | User;
  lastModifiedBy?: string | User;
  slug?: string;
  updatedAt: string;
  createdAt: string;
  url?: string;
  filename: string;
  mimeType?: string;
  filesize?: number;
  width?: number;
  height?: number;
  sizes?: {
    thumbnail?: {
      url?: string;
      width?: number;
      height?: number;
      mimeType?: string;
      filesize?: number;
      filename?: string;
    };
    card?: {
      url?: string;
      width?: number;
      height?: number;
      mimeType?: string;
      filesize?: number;
      filename?: string;
    };
    tablet?: {
      url?: string;
      width?: number;
      height?: number;
      mimeType?: string;
      filesize?: number;
      filename?: string;
    };
  };
}
export interface User {
  id: string;
  firstName: string;
  lastName: string;
  phone?: string;
  address?: string;
  birthDate?: string;
  gender?: 'male' | 'female' | 'other';
  roles?: ('admin' | 'subscriber' | 'editor' | 'user')[];
  score?: number;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string;
  resetPasswordExpiration?: string;
  salt?: string;
  hash?: string;
  loginAttempts?: number;
  lockUntil?: string;
  password?: string;
}
export interface Comment {
  id: string;
  comment: string;
  user?: string | User;
  likes?: number;
  dislikes?: number;
  commentable?:
    | {
        value: string | Product;
        relationTo: 'products';
      }
    | {
        value: string | Comment;
        relationTo: 'comments';
      };
  createdBy?: string | User;
  lastModifiedBy?: string | User;
  slug?: string;
  updatedAt: string;
  createdAt: string;
}
export interface Product {
  id: string;
  name: string;
  description: string;
  productType?: string | Plan;
  productStatus: 'active' | 'inactive';
  productImage: string | Media;
  relatedProducts?: string[] | Product[];
  info: {
    [k: string]: unknown;
  }[];
  price?: string | ProductPrice;
  lastModifiedBy?: string | User;
  createdBy?: string | User;
  slug?: string;
  updatedAt: string;
  createdAt: string;
}
export interface Plan {
  id: string;
  name: string;
  description: string;
  status?: 'active' | 'inactive';
  category: string[] | Category[];
  subscriptions?: string[] | Subscription[];
  periodicity?: 'monthly' | 'bimonthly' | 'quarterly' | 'biannual' | 'annual' | 'custom';
  lastModifiedBy?: string | User;
  createdBy?: string | User;
  slug?: string;
  updatedAt: string;
  createdAt: string;
}
export interface Subscription {
  id: string;
  status?: 'active' | 'inactive';
  startDate: string;
  endDate: string;
  user?: string | User;
  product?: string | Product;
  plan?: string | Plan;
  periodicity?: 'monthly' | 'bimonthly' | 'quarterly' | 'biannual' | 'annual' | 'custom';
  order?: string | Order;
  updatedAt: string;
  createdAt: string;
}
export interface Order {
  id: string;
  amount: number;
  status?: 'active' | 'inactive' | 'canceled' | 'pending' | 'finished' | 'refunded';
  type?: 'order' | 'renewal' | 'subscription';
  customer?: string | User;
  products?: string[] | Product[];
  referenceNumber?: string;
  paymentMethod?: string | PaymentMethod;
  details?: {
    [k: string]: unknown;
  }[];
  total?: string;
  createdBy?: string | User;
  lastModifiedBy?: string | User;
  slug?: string;
  updatedAt: string;
  createdAt: string;
}
export interface PaymentMethod {
  id: string;
  paymentsOfUser?: string[] | User[];
  title: string;
  paymentMethodType: 'zelle' | 'paypal' | 'pagoMovil' | 'cash' | 'bankTransfer';
  zelle?: {
    zelleEmail?: string;
    zelleName?: string;
  };
  paypal?: {
    paypalEmail?: string;
  };
  pagoMovil?: {
    pagoMovilPhone: string;
    bank?:
      | 'banco-de-venezuela'
      | 'banco-mercantil'
      | 'banco-provincial'
      | 'banco-bicentenario'
      | 'banco-exterior'
      | 'banco-occidental-de-descuento'
      | 'banco-sofitasa'
      | 'banco-plaza'
      | 'banco-caroni'
      | 'banco-activo'
      | 'banco-del-tesoro'
      | 'banco-agricola-de-venezuela'
      | 'banco-de-la-fuerza-armada-nacional-bolivariana'
      | 'banco-del-pueblo-soberano'
      | 'banco-nacional-de-credito'
      | 'banco-venezolano-de-credito'
      | 'banesco';
    pagoMovilIdn: string;
  };
  cash?: {
    cash?: string;
  };
  bankTransfer?: {
    accountNumber?: string;
    bankName?: string;
    accountType?: 'savings' | 'current';
    bank?:
      | 'banco-de-venezuela'
      | 'banco-mercantil'
      | 'banco-provincial'
      | 'banco-bicentenario'
      | 'banco-exterior'
      | 'banco-occidental-de-descuento'
      | 'banco-sofitasa'
      | 'banco-plaza'
      | 'banco-caroni'
      | 'banco-activo'
      | 'banco-del-tesoro'
      | 'banco-agricola-de-venezuela'
      | 'banco-de-la-fuerza-armada-nacional-bolivariana'
      | 'banco-del-pueblo-soberano'
      | 'banco-nacional-de-credito'
      | 'banco-venezolano-de-credito'
      | 'banesco';
  };
  createdBy?: string | User;
  slug?: string;
  updatedAt: string;
  createdAt: string;
}
export interface ProductPrice {
  id: string;
  price: number;
  currency: string | Currency;
  name: string;
  description: string;
  updatedAt: string;
  createdAt: string;
}
export interface Currency {
  id: string;
  name: string;
  symbol: string;
  exchangeRate?: number;
  slug?: string;
  updatedAt: string;
  createdAt: string;
}
export interface Notification {
  id: string;
  recipient?: string | User;
  message: string;
  status: 'active' | 'inactive';
  type:
    | 'comment'
    | 'like'
    | 'share'
    | 'follow'
    | 'mention'
    | 'message'
    | 'order'
    | 'payment'
    | 'evaluation'
    | 'request'
    | 'notification'
    | 'other';
  read: boolean;
  lastModifiedBy?: string | User;
  createdBy?: string | User;
  updatedAt: string;
  createdAt: string;
}
export interface PagoMovil {
  id: string;
  phone: string;
  name: string;
  cid: string;
  bank?:
    | 'banco-de-venezuela'
    | 'banco-mercantil'
    | 'banco-provincial'
    | 'banco-bicentenario'
    | 'banco-exterior'
    | 'banco-occidental-de-descuento'
    | 'banco-sofitasa'
    | 'banco-plaza'
    | 'banco-caroni'
    | 'banco-activo'
    | 'banco-del-tesoro'
    | 'banco-agricola-de-venezuela'
    | 'banco-de-la-fuerza-armada-nacional-bolivariana'
    | 'banco-del-pueblo-soberano'
    | 'banco-nacional-de-credito'
    | 'banco-venezolano-de-credito'
    | 'banesco';
  updatedAt?: string;
  createdAt?: string;
}
export interface Zelle {
  id: string;
  email: string;
  zelleHolder: string;
  bank: string;
  updatedAt?: string;
  createdAt?: string;
}
